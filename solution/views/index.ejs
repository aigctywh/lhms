<!doctype html>
<html>
  <head>
     <style>
     </style>
     <script src="https://ajax.googleapis.com/ajax/libs/jquery/1.12.4/jquery.min.js"></script>
     <script src="https://cdnjs.cloudflare.com/ajax/libs/socket.io/1.4.5/socket.io.min.js"></script>
     <script src="https://code.jquery.com/jquery.js"></script>
     <script src='https://d3js.org/d3.v3.min.js'></script>
     <script>
                var sArray = [];
             $(document).ready(function(){
                var socket;
                var fname = $("#fn").text();
                var data;
                $('#check').val(fname);
                $('#ins').val(fname);
                //$(".bar").attr('style',"display:none;");
                //$(".bar").attr('style',"display:inline;");
                var socket = io.connect('https://192.168.7.71:3000',{secure:true});
                        socket.on("stdout", function (data) {
                                console.log("data : ",data);
                                $(".bar").css({display:"inline-block",width:"20px",height:"75px","margin-right":"2px","background-color":"teal"});
                                //console.log("time : ",JSON.parse(data).time);
                                console.log("sensors : ",JSON.parse(data).sensors);
                                //sensor1 = JSON.parse(data).sensors;
                                sArray.push(data);
                                console.log("Array : ",sArray);
                                //d3chat(sArray);
                                d3chat(data);
                        });
                        socket.on("disconnect", function () {
                                socket.disconnect();
                        });
            });
                function d3chat(sensors){
                        console.log("sensors : ",sensors);
                        console.log("time : ",JSON.parse(sensors).time);
                        console.log("sensors : ",JSON.parse(sensors).sensors);
                        //window.setTimeout('location.reload()', 10000);
                        graphStart(JSON.parse(sensors).sensors);
                        g_reloadTimer = setInterval(reloadManager,500);
                        }
        var current_watt_for_graph = 0;

        function graphStart(sensors){

                    var n = 60,
                    random = d3.random.normal(0, 0),
                    data = sensors;

                var margin = {top: 20, right: 20, bottom: 20, left: 40},
                    width = 500 - margin.left - margin.right,
                    height = 280 - margin.top - margin.bottom;

                var x = d3.scale.linear()
                    .domain([0, n - 1])
                    .range([0, width]);

                var y = d3.scale.linear()
                    .domain([0, 100])
                    .range([height, 0]);

                var line = d3.svg.line()
                    .x(function(d, i) { return x(i); })
                    .y(function(d, i) { return y(d); });

                var svg = d3.select("#bar").append("svg")
                    .attr("width", width + margin.left + margin.right)
                    .attr("height", height + margin.top + margin.bottom)
                  .append("g")
                    .attr("transform", "translate(" + margin.left + "," + margin.top + ")");

                svg.style("fill", "#fff8ee")

                svg.append("defs").append("clipPath")
                    .attr("id", "clip")
                  .append("rect")
                    .attr("width", width)
                    .attr("height", height);

                svg.append("g")
                    .attr("class", "x axis")
                    .attr("transform", "translate(0," + y(0) + ")")
                    .call(d3.svg.axis().scale(x).orient("bottom"));

                svg.append("g")
                    .attr("class", "y axis")
                    .call(d3.svg.axis().scale(y).orient("left"));

                var path = svg.append("g")
                    .attr("clip-path", "url(#clip)")
                  .append("path")
                    .datum(data)
                    .attr("class", "line")
                    .attr("d", line);
                path
                .style('stroke-width', 1)
                .style('stroke', 'yellow');

                data.push(sensors);
                path
                .attr("d", line)
                .attr("transform", null)
                .transition()
                .duration(1000)
                .ease("linear")
                .attr("transform", "translate(" + x(-1) + ",0)")
                .each("end", tick);
                data.shift();
        }

     </script>
  </head>
  <body>
          <div>
          <a href='https://192.168.7.71:10000/mymodule/'>mainpage</a>
          <a href='/'>node first page</a>
          <a href='/refresh'>server list refresh</a>
          <a href='http://192.168.7.71:19999/#menu_sensors;theme=slate;help=true'>Sensors</a>
          </div>
          <div>
          <table>
                  <tr>
                  <th>fname</th>&nbsp;<th>host</th>&nbsp;<th>user</th>&nbsp;<th>pwd</th>&nbsp;<th>inputdt</th>&nbsp;<th>updatedt</th>&nbsp;<th>log</th>&nbsp;<th>status</th>
                  </tr>
                  <% rs.forEach(function(rss,index){ %>
                  <td id="fn"><%= rss.fname %></td>&nbsp;
                  <!--url '/ not add -->
                  <td><a href='/detail/<%= rss.fname %>'><%= rss.host %>&nbsp;</a></td>
                  <td><%= rss.user %>&nbsp;</td>
                  <td><%= rss.pwd %>&nbsp;</td>
                  <td><%= rss.inputdt %>&nbsp;</td>
                  <td><%= rss.updatedt %>&nbsp;</td>
                  <td><%= rss.log %></td>
                  <td><%= rss.status %></td>
                  <% }); %>
          </table>
          </div>
        <h1>Install HMS</h1>
        <form method='post' action='/setup'>
                <table border="1">
                <tr>
                <th>Install HMS</th>
                </tr>
                <tr>
                <td>
                host : <input type="text" name="host"/>
                </td>
                <td>
                user : <input type="text" name="user"/>
                </td>
                <td>
                pwd : <input type="password" name="pwd"/>
                </td>
                <td>
                <input type="hidden" id="ins" value=""/>
                </td>
                <td>
                <input type="submit" value="send"/>
                </td>
                </tr>
                </table>
        </form>
        <h1>Server Status Check</h1>
        <form method='post' action='/check'>
                <table border="1">
                <tr>
                <th>Server Status Check</th>
                </tr>
                <tr>
                <td>
                host : <input type="text" name="host"/>
                </td>
                <td>
                user : <input type="text" name="user"/>
                </td>
                <td>
                pwd : <input type="password" name="pwd"/>
                </td>
                <td>
                <input type="hidden" id="check" value=""/>
                </td>
                <td>
                <input type="submit" value="send"/>
                </td>
                </tr>
                </table>
        </form>
        <h1> Sensors </h1>
        <div class="bar"></div>
  </body>
</html>
